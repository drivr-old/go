// Automatically generated by MockGen. DO NOT EDIT!
// Source: place_repository.go

package mock_public

import (
	http "net/http"

	gomock "github.com/golang/mock/gomock"
)

// Mock of httpClient interface
type MockhttpClient struct {
	ctrl     *gomock.Controller
	recorder *_MockhttpClientRecorder
}

// Recorder for MockhttpClient (not exported)
type _MockhttpClientRecorder struct {
	mock *MockhttpClient
}

func NewMockhttpClient(ctrl *gomock.Controller) *MockhttpClient {
	mock := &MockhttpClient{ctrl: ctrl}
	mock.recorder = &_MockhttpClientRecorder{mock}
	return mock
}

func (_m *MockhttpClient) EXPECT() *_MockhttpClientRecorder {
	return _m.recorder
}

func (_m *MockhttpClient) Do(req *http.Request) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockhttpClientRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}
